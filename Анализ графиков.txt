Значения на графиках: средние показатели за 10 вычислений на каждом этапе.

График 1: MO_FO, SA, T0 = 10000000000000, CS = 10, R = 500.

	Наблюдаем показатели алгоритма в зависимости от количества его этапов.

	Анализ:
	Время работы алгоритма имитации отжига зависит от количества его этапов линейно.
	С увеличением количества этапов работы алгоритма увеличивается и значение целевой функции. Но если при увеличении количества этапов от 10 до 50 алгоритм каждый следующий раз обеспечивал всё большее значение целевой функции, то, начиная с 60 этапов и далее, алгоритм показывал при разных количествах этапов либо почти такое же значение ЦФ как и на предыдущем шаге, либо увеличение значения ЦФ, или вообще значение ЦФ ниже, чем на нескольких шагах ранее.

График 2: VO, SA, T0 = 10000000000000, CS = 50, R = 500.

	Наблюдаем показатели алгоритма в зависимости от количества его этапов.

	Анализ:
	Время работы алгоритма имитации отжига зависит от количества его этапов линейно.
	При количестве этапов до 14 не наблюдается зависимость от них значения ЦФ, но с постепенным ростом количества этапов до 30 значение ЦФ возрастает, хотя от 20 до 30 значение почти неизменно, а время работы алгоритма увеличилось почти в двое -- каждый раз алгоритм не может покинуть локальный максимум.

График 3: MO_FO, GA, P = 0.9, k = 3, CS = 10, R = 500.

	Наблюдаем показатели алгоритма в зависимости от размера популяции.

	Анализ:
	Время работы алгоритма увеличивается с увеличением размера начальной популяции. Время работы генетического алгоритма зависит от размера начальной популяции нелинейно, график вогнутый. 
	Значение ЦФ в целом возрастает с увеличением размера начальной популяции, но наблюдаются и падения до значений предыдущих шагов.

График 4: VO, GA, k = 2, P = 0.9, CS = 50, R = 500.

	Наблюдаем показатели алгоритма в зависимости от размера начальной популяции.

	Анализ:
	Время работы алгоритма увеличивается с увеличением начальной популяции. Время работы генетического алгоритма зависит от начальной популяции нелинейно, график вогнутый. 
	Значение ЦФ растёт с увеличением начальной популяции.

Таблица 1: MO_FO, SA&GA, CSnum, R500.

	Сравниваем работу двух алгоритмов с адаптированными под размер задачи параметрами при различных количествах зарядных станций.

	1. GA при почти одинаковом затраченном времени почти всегда обеспечивает большее значение ЦФ.
	2. Разница между значением ЦФ увеличивается с увеличением количества зарядных станций. (1.85, 72.295, 112.5, 293.75, 326)
	3. Время работы алгоритмов не зависит от кол-ва зарядных станций (т.к. они только 1 в векторе X, выполняя преобразования с вектором, нам не важно, какие значения имеют его компоненты (кроме кроссовера в GA)).
	4. Имеется зависимость в количестве зарядных станций и значении ЦФ: пропорциональная

Таблица 2: VO, SA&GA, CSnum, R500.

	Сравниваем работу двух алгоритмов с адаптированными под размер задачи параметрами при различных количествах зарядных станций.

	1. GA при почти одинаковом затраченном времени в среднем обеспечивает большее значение ЦФ.
	2. Разница между значением ЦФ увеличивается с увеличением количества зарядных станций. (128.825, 190.025, 228.6, 489.45, 1206.375)
	3. Время работы алгоритмов не зависит от кол-ва зарядных станций (т.к. они только 1 в векторе X, выполняя преобразования с вектором, нам не важно, какие значения имеют его компоненты (кроме кроссовера в GA)).
	4. Имеется зависимость в количестве зарядных станций и значении ЦФ: пропорциональная

Таблица 3: MO_FO, SA&GA, Rnum, R500.

	Сравниваем работу двух алгоритмов с адаптированными под размер задачи параметрами при различных радиусах покрытия зарядных станций.

	1. GA при почти одинаковом затраченном времени почти всегда обеспечивает большее значение ЦФ. Один раз значение было меньше (при R = 250)
	2. Разница между значением ЦФ в целом тоже увеличивается с увеличением радиуса покрытия зарядных станций. (0.175, 0.2, -2.125, 36.975, 45.15)
	3. Время работы алгоритмов не зависит от радиуса покрытия (т.к. изменяется только матрица покрытия, участвующая в вычислении значения ЦФ, размер задачи остаётся тот же).

Таблица 4: VO, SA&GA, Rnum, R500.

	Сравниваем работу двух алгоритмов с адаптированными под размер задачи параметрами при различных радиусах покрытия зарядных станций.

	1. GA при почти одинаковом затраченном времени почти всегда обеспечивает большее значение ЦФ.
	2. Разница между значением ЦФ в целом тоже увеличивается с увеличением радиуса покрытия зарядных станций. (10.75, 19.825, 46.475, 175.675, 391.75)
	3. Время работы алгоритмов не зависит от радиуса покрытия (т.к. они только 1 в векторе X, выполняя преобразования с вектором, нам не важно, какие значения имеют его компоненты (кроме кроссинговера в GA)).

Главные выводы:
	По таблицам:
	1. В подавляющем большинстве случаев при прочих равных (и адаптированных под размер задачи параметрах алгоритмов) генетический алгоритм обеспечивает большее значение целевой функции, причём с ростом кол-ва CS или R растёт и разность значений ЦФ GA и SA
	2. Имеется зависимость в количестве зарядных станций и значении ЦФ: пропорциональная. Можно даже предположить, что есть некий коэффициент.
	3. Зависимость между радиусом покрытия и значением ЦФ только в росте. Скорее всего, это обусловлено географией и размерами выбранной области.

	По графикам:
	1. Время работы SA линейно зависит от количества этапов алгоритма.
	2. Время работы GA *как-то* зависит от размера популяции.
	3. При адаптированных под размеры задачи параметрах при сходном времени работы алгоритмы на MO_FO показывают схожие значения, но результат работы GA выше, чем SA. 
	4. При схожем времени работы на VO SA не показывает зависимости значения ЦФ от k_max, но если пронаблюдать увеличение _max до 30, то видно, что на определённом максимальном количестве шагов алгоритм почти не увеличивает значение ЦФ, оставаясь в районе локального максимума. Наоборот, GA от 12 секунд до 43 секунд (ср. с таким же временем у SA) обеспечивает значения ЦФ на сотни превосходящее значения ЦФ SA.